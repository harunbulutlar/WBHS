@model PatientModel
@using MvcApplication2.Models
@using PagedList
@using PagedList.Mvc;
@using Resources
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = @Resource.Index;
}

@{
    var physicianModels = ViewData["Physicians"] as IPagedList<PhysicianModel>;
}
<h2>@Resource.Index</h2>
<section id="loginForm">
@if (Request.IsAuthenticated) {
    
    <text>
        @Resource.Hello, @ViewData.Model.Name @Html.ActionLink(Resources.Resource.EditAccount, "Edit", "Home", routeValues: null, htmlAttributes: new { @class = "username", title = "Manage" })!
    </text>
    <div>
        @Helpers.ShowPhotoOrDefault(ViewData.Model)
    </div>
    <div>
        <div>
            @Resource.Vaccinations
        </div>
        @Html.TextAreaFor(model => model.Vaccinations, new { @readonly = "readonly" })
    </div>
    <div>
        <div>
            @Resource.Treatments
        </div>
        @Html.TextAreaFor(model => model.Treathments, new { @readonly = "readonly" })
    </div>
    <div>
        <div>
            @Resource.LabResults
        </div>
        @Html.TextAreaFor(model => model.LabResults, new { @readonly = "readonly" })
    </div>
    <div>
        <div>
            @Resource.CurrentMeds
        </div>
        @Html.TextAreaFor(model => model.CurrentMedications, new { @readonly = "readonly" })
    </div>
    <div>
        <div>
            @Resource.InconvenientMeds
        </div>
        @Html.TextAreaFor(model => model.InconvenientMedications, new { @readonly = "readonly" })
    </div>
    <div>
        <div>
            @Resource.Allergies
        </div>
        @Html.TextAreaFor(model => model.Allergies, new { @readonly = "readonly" })
    </div>
    <div>
        <div>
            @Resource.Surgeries
        </div>
        @Html.TextAreaFor(model => model.Surgeries, new { @readonly = "readonly" })
    </div>
    <div>
        <div>
            @Resource.Diseases
        </div>
        @Html.TextAreaFor(model => model.Diseases, new { @readonly = "readonly" })
    </div>
    <div>
        <div>
            @Resource.Disorders
        </div>
        @Html.TextAreaFor(model => model.Disorders, new { @readonly = "readonly" })
    </div>
    <div>
        <div>
            @Resource.IsVisitationInformationPrivate
        </div>
        @Html.CheckBoxFor(model => model.IsVisitationInformationPrivate, new { @disabled = "disabled" })
    </div>
}
</section>
<section class="social" id="socialLoginForm">
    @using (Html.BeginForm("Index", "Staff", FormMethod.Get))
    {
        <h2>Search for Physicians</h2>
        <p>
            Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Search" />
        </p>
    }
    @if (physicianModels != null)
    {
        <table>
            <tr>
                <th>Actions</th>
                <th>Photo</th>
                <th>
                    @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
            </tr>

            @foreach (var item in physicianModels)
            {
                <tr>
                    <td>
                        @Html.ActionLink("Schedule", "Schedule", new { physicianId = item.UserId, patientId = Model.UserId}) |
                         @Html.ActionLink("Details", "Details", new { id = item.UserId })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Surname)
                    </td>
                </tr>
            }
        </table>
        <text>Page </text> @(physicianModels.PageCount < physicianModels.PageNumber ? 0 : physicianModels.PageNumber)<text>of </text> @physicianModels.PageCount
        @Html.PagedListPager(physicianModels, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    }
    <br />
</section>


